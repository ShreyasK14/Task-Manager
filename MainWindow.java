
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

public class MainWindow extends javax.swing.JFrame {
    private ArrayList<Task> taskList;
    private String currentDirectory = "DATFolder\\";
    private HashMap<String, ArrayList<Task>> groups;
    private String selectedGroup;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        groups = new HashMap<String, ArrayList<Task>>();
        taskList = new ArrayList<Task>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel_title = new javax.swing.JLabel();
        jButton_view = new javax.swing.JButton();
        jComboBox_groups = new javax.swing.JComboBox<>();
        jButton_add = new javax.swing.JButton();
        jButton_group = new javax.swing.JButton();
        jTextField_group = new javax.swing.JTextField();
        jLabel_group = new javax.swing.JLabel();
        jButton_save = new javax.swing.JButton();
        jButton_load = new javax.swing.JButton();
        jLabel_confirm = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel_title.setText("Welcome to your Task Manager");

        jButton_view.setText("View Tasks");
        jButton_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_viewActionPerformed(evt);
            }
        });

        jComboBox_groups.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "View All Groups" }));

        jButton_add.setText("Add Task");
        jButton_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addActionPerformed(evt);
            }
        });

        jButton_group.setText("Create new Group");
        jButton_group.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_groupActionPerformed(evt);
            }
        });

        jTextField_group.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_groupActionPerformed(evt);
            }
        });

        jLabel_group.setText("Group Name:");

        jButton_save.setText("Save Tasks");
        jButton_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_saveActionPerformed(evt);
            }
        });

        jButton_load.setText("Load Tasks");
        jButton_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_loadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel_title, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(146, 146, 146)
                                        .addComponent(jLabel_group)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_group, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton_group)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox_groups, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_add)))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_save)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_load)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel_confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_view)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_title)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_add)
                    .addComponent(jComboBox_groups, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton_view)
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_group, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_group))
                .addGap(18, 18, 18)
                .addComponent(jButton_group)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_save)
                    .addComponent(jButton_load)
                    .addComponent(jLabel_confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_groupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_groupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_groupActionPerformed

    //when the view tasks button is clicked
    private void jButton_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_viewActionPerformed
        //checks if there are tasks in the list
        //informs the user that the tasks have been opened or not available based on that
        jLabel_confirm.setText("Tasks opened.");
        //if there are no tasks it tells the user that
        if (taskList == null || taskList.size() == 0) {
            jLabel_confirm.setText("No tasks to view.");
            return;
        }
        //opens the View Tasks Window if there are tasks to show
        else {
            try {
            selectedGroup = (String) jComboBox_groups.getSelectedItem();
            Tasks tasks = new Tasks(this);
            tasks.setVisible(true);
            }
            catch (IOException e) {
                System.out.println("Error");
            }
        }
    }//GEN-LAST:event_jButton_viewActionPerformed

    //when the Add Tasks button is clicked
    private void jButton_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addActionPerformed
        //opens up the New Task Window
        try {
        NewTask newTask = new NewTask(this);
        newTask.setVisible(true);
        taskList = newTask.getTasks();
        }
        catch (IOException e) {
            System.out.println("Error");
        }
    }//GEN-LAST:event_jButton_addActionPerformed

    //when the save tasks button is clicked
    private void jButton_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_saveActionPerformed
        //informs the user the tasks have been saved
        jLabel_confirm.setText("Tasks saved.");
        try {
            JFileChooser jfc = new JFileChooser(currentDirectory);
            //user chooses a directory to save to
            if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = jfc.getSelectedFile();
                FileOutputStream fos = new FileOutputStream(file);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                
                if (taskList == null)
                    return;
                //writes the data on that file if there is data to write
                oos.writeObject(taskList);
                oos.writeObject(groups);
                oos.close();
                //fos.close();
            }
        }
        //makes sure the file you are saving to is there
        catch (FileNotFoundException e) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, e);
        }
        catch(IOException e) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_jButton_saveActionPerformed

    private void jButton_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_loadActionPerformed
        //when the load button is clicked
        //informs the user tasks have been loaded
        jLabel_confirm.setText("Tasks loaded.");
        try {
            JFileChooser jfc = new JFileChooser(currentDirectory);
            //gets the user to choose the file to load from
            if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = jfc.getSelectedFile();
                FileInputStream fis = new FileInputStream(file);
                ObjectInputStream ois = new ObjectInputStream(fis);
                
                //populates the tasks and groups based on the file loaded
                taskList = (ArrayList<Task>) ois.readObject();
                groups = (HashMap<String, ArrayList<Task>>) ois.readObject();
                ois.close();
                //populates the combobox on what groups you can view
                for (String s : groups.keySet()) {
                    jComboBox_groups.addItem(s);
                }
            }
        }
        //checks to see if it can find the file
        catch (FileNotFoundException e) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, e);
        }
        catch(IOException e) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, e);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton_loadActionPerformed

    //creates a new group
    private void jButton_groupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_groupActionPerformed
        //tells the user a new group has been created
        groups.put(jTextField_group.getText(), new ArrayList<Task>());
        jComboBox_groups.addItem(jTextField_group.getText());
        jLabel_confirm.setText("Group created.");
        jTextField_group.setText("");
    }//GEN-LAST:event_jButton_groupActionPerformed

    //return tasks
    public ArrayList<Task> getTasks() {
        return taskList;
    }
    
    //return groups
    public HashMap<String, ArrayList<Task>> getGroups() {
        return groups;
    }
    
    //remove a task
    public void removeTask(int index) {
        taskList.remove(index);
    }
    
    //get the selected group
    public String getSelectedGroup() {
        return selectedGroup;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_add;
    private javax.swing.JButton jButton_group;
    private javax.swing.JButton jButton_load;
    private javax.swing.JButton jButton_save;
    private javax.swing.JButton jButton_view;
    private javax.swing.JComboBox<String> jComboBox_groups;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel_confirm;
    private javax.swing.JLabel jLabel_group;
    private javax.swing.JLabel jLabel_title;
    private javax.swing.JTextField jTextField_group;
    // End of variables declaration//GEN-END:variables
}
